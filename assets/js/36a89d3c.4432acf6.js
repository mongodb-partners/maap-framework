"use strict";(self.webpackChunkmaap_docs=self.webpackChunkmaap_docs||[]).push([[2242],{683:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"quick-starts/quickstarts/confluent/healthcare","title":"Healthcare Agent","description":"Welcome to the Medical Knowledge Database Quick Start! This repository offers a step-by-step guide to rapidly deploying","source":"@site/docs/quick-starts/quickstarts/confluent/healthcare.md","sourceDirName":"quick-starts/quickstarts/confluent","slug":"/quick-starts/quickstarts/confluent/healthcare","permalink":"/maap-framework/docs/quick-starts/quickstarts/confluent/healthcare","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"quickstartSidebar","previous":{"title":"Loan Agent","permalink":"/maap-framework/docs/quick-starts/quickstarts/confluent/bank-agent"},"next":{"title":"Anthropic","permalink":"/maap-framework/docs/quick-starts/quickstarts/anthropic"}}');var s=t(4848),r=t(8453);const o={},a="Healthcare Agent",l={},c=[{value:"Key Features",id:"key-features",level:2},{value:"Use Case",id:"use-case",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Document Indexing",id:"document-indexing",level:3},{value:"Chatbot",id:"chatbot",level:3},{value:"Key Concepts",id:"key-concepts",level:3},{value:"Requirements",id:"requirements",level:2},{value:"Docker",id:"docker",level:3},{value:"Access Keys to Cloud Services Providers",id:"access-keys-to-cloud-services-providers",level:3},{value:"Confluent Cloud",id:"confluent-cloud",level:4},{value:"MongoDB Atlas",id:"mongodb-atlas",level:4},{value:"GCP",id:"gcp",level:4},{value:"Managed Policies",id:"managed-policies",level:6},{value:"Regional Deployment Considerations",id:"regional-deployment-considerations",level:3},{value:"1. Bring up the infrastructure",id:"1-bring-up-the-infrastructure",level:3},{value:"2. Have a conversation",id:"2-have-a-conversation",level:3},{value:"3. Bring down the infrastructure",id:"3-bring-down-the-infrastructure",level:3},{value:"FAQ",id:"faq",level:2},{value:"When I run destroy.sh I encounter <strong>gcp reauth needed</strong> error. How can I solve this problem?",id:"when-i-run-destroysh-i-encounter-gcp-reauth-needed-error-how-can-i-solve-this-problem",level:3},{value:"Which deploy.sh and destroy.sh should I run?",id:"which-deploysh-and-destroysh-should-i-run",level:3},{value:"Is there a shortcut to pass environment variables once instead providing them every time I deploy?",id:"is-there-a-shortcut-to-pass-environment-variables-once-instead-providing-them-every-time-i-deploy",level:3},{value:"I am hitting &quot;Error: error reading Kafka Topic: 401 API-key based authentication failed.: API-key based authentication failed.&quot; error while rotating my keys. How can I fix this?",id:"i-am-hitting-error-error-reading-kafka-topic-401-api-key-based-authentication-failed-api-key-based-authentication-failed-error-while-rotating-my-keys-how-can-i-fix-this",level:3},{value:"Do I need to provide credit card information when I create an account at Google Cloud Platform and Confluent Cloud?",id:"do-i-need-to-provide-credit-card-information-when-i-create-an-account-at-google-cloud-platform-and-confluent-cloud",level:3},{value:"Next Steps - Improving the Results",id:"next-steps---improving-the-results",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h6:"h6",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"healthcare-agent",children:"Healthcare Agent"})}),"\n",(0,s.jsx)(n.p,{children:"Welcome to the Medical Knowledge Database Quick Start! This repository offers a step-by-step guide to rapidly deploying\na fully functional chatbot that helps identify medications, their side effects, dosages, and essential information to\ndetermine the best treatment for an illness."}),"\n",(0,s.jsxs)(n.p,{children:["The solution leverages ",(0,s.jsx)(n.strong,{children:"MongoDB"}),", ",(0,s.jsx)(n.strong,{children:"Confluent Cloud"}),", ",(0,s.jsx)(n.strong,{children:"GCP"}),", ",(0,s.jsx)(n.strong,{children:"Gemini"})," and ",(0,s.jsx)(n.strong,{children:"Flink"})," to deliver a scalable, intelligent,\nand real-time conversational experience."]}),"\n",(0,s.jsx)(n.p,{children:"This quick start is designed to help medical professionals efficiently access and manage medication data through an intelligent\nchatbot. The system can answer medical queries, retrieve relevant drug information, and provide actionable insights.\nIt also includes structured indexing of medical records into MongoDB's vector database, enabling Retrieval-Augmented Generation (RAG)\nto enhance the chatbot's accuracy and reliability."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/mongodb-partners/maap-confluent-gcp-qs",children:(0,s.jsx)(n.img,{src:"https://github-readme-stats.vercel.app/api/pin/?username=mongodb-partners&repo=maap-confluent-gcp-qs",alt:"ReadMe Card"})})}),"\n",(0,s.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Real-Time Data Processing"}),": Powered by Confluent Cloud and Flink, ensuring low-latency communication and\nevent-driven architecture."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Intelligent Conversations"}),": Integrated with Gemini's AI models for natural and accurate conversational\nresponses."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Efficient Document Retrieval"}),": Leverages MongoDB Atlas with vector search capabilities for quick and accurate\ndocument indexing and retrieval."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Scalable and Cloud-Native"}),": Built with Google Cloud Functions to provide a flexible and serverless REST API."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Seamless Deployment"}),": Follow step-by-step instructions to deploy the entire solution with minimal effort."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"use-case",children:"Use Case"}),"\n",(0,s.jsx)(n.p,{children:"This chatbot is designed for medical professionals to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Provide instant responses to queries about prescription drugs, including dosages, side effects, and contraindications."}),"\n",(0,s.jsx)(n.li,{children:"Retrieve structured drug information based on symptoms, illness names, or treatment categories."}),"\n",(0,s.jsx)(n.li,{children:"Automate access to a comprehensive medication database, enabling faster and more informed decision-making."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Whether you're looking to streamline drug research, enhance clinical decision support, or explore AI-powered medical\ninformation retrieval, this quick start provides a strong foundation."}),"\n",(0,s.jsx)(n.p,{children:"\ud83d\udc49 This quick start sets up a functional AI-driven prescription drug database but operates on a limited set of sample\ndata. The information provided should not be treated as medical fact or used for real-world diagnosis or treatment\ndecisions. Always consult trusted medical sources or healthcare professionals for accurate and up-to-date drug information."}),"\n",(0,s.jsxs)(n.p,{children:["Refer to the ",(0,s.jsx)(n.strong,{children:"Next Steps"})," section at the end of this document to learn how you can refine the architecture and improve AI performance."]}),"\n",(0,s.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#genai-chatbot-quickstart",children:"GenAI Chatbot Quickstart"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#key-features",children:"Key Features"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#use-case",children:"Use Case"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#table-of-contents",children:"Table of Contents"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#architecture",children:"Architecture"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#document-indexing",children:"Document Indexing"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#chatbot",children:"Chatbot"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#key-concepts",children:"Key Concepts"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#requirements",children:"Requirements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#docker",children:"Docker"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#access-keys-to-cloud-services-providers",children:"Access Keys to Cloud Services Providers"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#confluent-cloud",children:"Confluent Cloud"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#mongodb-atlas",children:"MongoDB Atlas"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#GCP",children:"GCP"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#enable-foundation-model-access",children:"Enable Foundation Model Access"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#run-the-quickstart",children:"Run the Quickstart"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#1-bring-up-the-infrastructure",children:"1. Bring up the infrastructure"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#2-have-a-conversation",children:"2. Have a conversation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#2b-add-a-new-product-optional",children:"2b. Add a new product (Optional)"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#3-bring-down-the-infrastructure",children:"3. Bring down the infrastructure"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"HLA",src:t(4938).A+"",width:"1270",height:"721"})}),"\n",(0,s.jsx)(n.p,{children:"Architecture for handling document indexing and chatbot functionality using a combination of GCP services, Gemini\nVertex, MongoDB Atlas and Confluent Cloud. Below is a breakdown of the architecture and its components:"}),"\n",(0,s.jsx)(n.h3,{id:"document-indexing",children:"Document Indexing"}),"\n",(0,s.jsx)(n.p,{children:"This section focuses on ingesting and processing data for use in downstream applications like search and chatbots."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data Sources:"})," Various data sources feed into the system. These could be structured or unstructured data streams."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Summarisation:"})," Google Gemini is used to summarise data, extracting meaningful information from documents."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Vectorisation:"})," Embeddings are generated for the input data to convert textual information into high-dimensional\nnumerical vectors."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Sink Connector:"})," Processed data (both summarised content and embeddings) is output via a sink connector to MongoDB\nAtlas vector database."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"chatbot",children:"Chatbot"}),"\n",(0,s.jsx)(n.p,{children:"This section demonstrates how the system interacts with user queries in real time."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Frontend:"})," The frontend handles interactions with users. User inputs are sent to a topic for further processing."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Websocket:"})," Provides real-time communication between the frontend and backend for immediate responses."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Query Vectorisation:"})," User queries are vectorised using the Embeddings model to transform them into numerical\nrepresentations. This is done to match queries against stored vectors in the vector search database."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Vector Search:"})," MongoDB Atlas vector database, retrieves relevant information based on the vectorised query. It\nsearches through embeddings generated during the document indexing phase."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Model Inference:"})," Google Gemini is used for model inference to generate responses."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Output to User:"})," The system sends the processed results back to the user via the websocket."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Embeddings:"})," These are vector representations of text, allowing the system to handle semantic search."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"MongoDB Atlas:"})," Enables efficient, scalable, and real-time semantic matching of user queries against\nhigh-dimensional embeddings to deliver relevant results in the chatbot and document indexing workflows."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Google Gemini:"})," Used for both summarisation and generating responses in natural language."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,s.jsx)(n.h3,{id:"docker",children:"Docker"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"deploy"}),"script builds everything for you, the only required software is Docker."]}),"\n",(0,s.jsxs)(n.p,{children:["Follow the ",(0,s.jsx)(n.a,{href:"https://docs.docker.com/get-docker/",children:"Get Docker"})," instructions to install it on your computer."]}),"\n",(0,s.jsx)(n.h3,{id:"access-keys-to-cloud-services-providers",children:"Access Keys to Cloud Services Providers"}),"\n",(0,s.jsxs)(n.p,{children:["Once you have ",(0,s.jsx)(n.code,{children:"docker"})," installed, you just need to get keys to authenticate to the various CSPs."]}),"\n",(0,s.jsx)(n.h4,{id:"confluent-cloud",children:"Confluent Cloud"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Creating Confluent Cloud Api Keys",src:t(5501).A+"",width:"1728",height:"1117"})}),"\n",(0,s.jsxs)(n.p,{children:["For Confluent Cloud, you need to get a ",(0,s.jsx)(n.em,{children:"Cloud resource management"})," key."]}),"\n",(0,s.jsxs)(n.p,{children:["If you don't already have an account, after signing up, click the top right corner menu (AKA the hamburger menu) and\nselect ",(0,s.jsx)(n.em,{children:"API keys"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"cc-api-keys",src:t(6622).A+"",width:"646",height:"1186"})}),"\n",(0,s.jsxs)(n.p,{children:["Click the ",(0,s.jsx)(n.em,{children:"+ Add API key"})," button, select ",(0,s.jsx)(n.em,{children:"My Account"})," and click the ",(0,s.jsx)(n.em,{children:"Next"})," button (bottom right).\nIf you feel like it, enter a name and description. Click the ",(0,s.jsx)(n.em,{children:"Create API Key"})," (bottom right)."]}),"\n",(0,s.jsx)(n.h4,{id:"mongodb-atlas",children:"MongoDB Atlas"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"mongodb-atlas-api-keys",src:t(9407).A+"",width:"3456",height:"2234"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Connect to the Atlas UI. You must have Organisation Owner access to Atlas."}),"\n",(0,s.jsxs)(n.li,{children:["Select ",(0,s.jsx)(n.em,{children:"Organisation Access"})," from the ",(0,s.jsx)(n.em,{children:"Access Manager"})," menu in the navigation bar."]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.em,{children:"Access Manager"})," in the sidebar. (The Organisation Access Manager page displays.)"]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.em,{children:"Add new"})," then ",(0,s.jsx)(n.em,{children:"API Key"})]}),"\n",(0,s.jsxs)(n.li,{children:["In the ",(0,s.jsx)(n.em,{children:"API Key Information"}),", enter a description."]}),"\n",(0,s.jsxs)(n.li,{children:["In the ",(0,s.jsx)(n.em,{children:"Organisation Permissions"})," menu, select the ",(0,s.jsx)(n.em,{children:"Organisation Owner"})," role. ",(0,s.jsx)(n.strong,{children:"Important:"})," Make sure that only the\n",(0,s.jsx)(n.em,{children:"Organisation Owner"})," role is selected, you may have to click the default ",(0,s.jsx)(n.em,{children:"Organisation Member"})," to un-select it."]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.em,{children:"Next"}),", copy the public and private key in a safe place and click ",(0,s.jsx)(n.em,{children:"Done"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Useful links:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.mongodb.com/docs/atlas/configure-api-access/#grant-programmatic-access-to-an-organization",children:"Grant Programmatic Access to an Organisation"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.mongodb.com/developer/products/atlas/mongodb-atlas-with-terraform/",children:"MongoDB Atlas API Keys"})," (part of a\ntutorial on Terraform with Atlas)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"At last, get your Atlas Organisation ID from the Atlas UI."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Atlas Organisation ID",src:t(9396).A+"",width:"1282",height:"492"})}),"\n",(0,s.jsx)(n.h4,{id:"gcp",children:"GCP"}),"\n",(0,s.jsx)(n.p,{children:"To use Google Gemini within your chatbot, you need to obtain a Gemini API Key and your Google Cloud Project ID.\nFollow the steps below to set up your credentials properly."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Retrieve Your Google Cloud Project ID"}),":  If you don\u2019t have a Google Cloud account yet, sign up at ",(0,s.jsx)(n.a,{href:"https://cloud.google.com/",children:"Google Cloud"}),".\nOnce signed in, go to the Google Cloud Console, where you'll find your Project ID displayed beneath your project\nname on the Welcome screen. Save this Project ID, as you\u2019ll need it later during deployment."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Generate a Gemini API Key"}),": In the Google Cloud Console, open the navigation menu (\u2630) in the top-left corner\nand go to APIs & Services \u2192 Credentials. Click + Create Credentials, then select API Key from the dropdown menu.\nYour API key will be generated\u2014copy and store it securely, copy and securely store this key, as it will be required during deployment."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use Your API Key During Deployment"}),": When running the deployment script (deploy.sh), the application will prompt you to enter the Gemini API Key.\nProvide the API key you saved in the previous step."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"By completing these steps, your Google Cloud environment will be configured for the chatbot to integrate with the Gemini API."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["[!IMPORTANT]",(0,s.jsx)(n.br,{}),"\n","Please be sure to select ",(0,s.jsx)(n.strong,{children:"Don't Restrict Key"})," under your Gemini API Key as you can see below."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Unrestricted Gemini Key",src:t(2521).A+"",width:"663",height:"780"})}),"\n",(0,s.jsxs)(n.p,{children:["If not enabled yet please navigate to the ",(0,s.jsx)(n.strong,{children:"+Enable APIs and Services"})," tab to enable APIs below."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Artifact Registry API"}),"\n",(0,s.jsx)(n.li,{children:"Cloud Build API"}),"\n",(0,s.jsx)(n.li,{children:"Cloud Run Admin API"}),"\n",(0,s.jsx)(n.li,{children:"Cloud Logging API"}),"\n",(0,s.jsx)(n.li,{children:"BigQuery API"}),"\n",(0,s.jsx)(n.li,{children:"Compute Engine API"}),"\n",(0,s.jsx)(n.li,{children:"Identity and Access Management (IAM) API"}),"\n",(0,s.jsx)(n.li,{children:"Cloud Pub/Sub API"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Google Cloud credentials are required for Flink AI to connect to Vertex AI, as well as for deploying resources using\nTerraform. You will need a service account key with appropriate IAM permissions."}),"\n",(0,s.jsx)(n.h6,{id:"managed-policies",children:"Managed Policies"}),"\n",(0,s.jsx)(n.p,{children:"If you are using managed policies in Google Cloud, assign the following IAM roles to your service account or user:"}),"\n",(0,s.jsx)(n.p,{children:"SERVICE ACCOUNTS"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Useful links:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.confluent.io/cloud/current/ai/ai-model-inference.html#create-an-ai-model",children:"Flink AI: Create Model"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.confluent.io/cloud/current/ai/ai-model-inference.html#google-ai",children:"Google AI from Flink AI"})}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h1,{id:"run-the-quickstart",children:"Run the Quickstart"}),"\n",(0,s.jsx)(n.h3,{id:"regional-deployment-considerations",children:"Regional Deployment Considerations"}),"\n",(0,s.jsxs)(n.p,{children:["When deploying this solution, ensure that all cloud services\u2014",(0,s.jsx)(n.strong,{children:"Confluent Cloud"}),", ",(0,s.jsx)(n.strong,{children:"fully managed source and sink connectors"}),",\n",(0,s.jsx)(n.strong,{children:"MongoDB Atlas"}),", ",(0,s.jsx)(n.strong,{children:"Google Cloud (Vertex AI & Gemini models)"}),", and ",(0,s.jsx)(n.strong,{children:"Confluent Flink"})," \u2014 are deployed in regions that can\ncommunicate with each other to avoid network latency or connectivity issues. Each provider has specific guidelines for\ncross-region communication and networking:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Confluent Cloud Region Compatibility"}),": ",(0,s.jsx)(n.a,{href:"https://docs.confluent.io/cloud/current/clusters/regions.html",children:"Check supported regions"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Fully Managed Connectors Regions"}),": ",(0,s.jsx)(n.a,{href:"https://docs.confluent.io/cloud/current/connectors/index.html",children:"Connector availability by region"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MongoDB Atlas Multi-Region Setup"}),": ",(0,s.jsx)(n.a,{href:"https://www.mongodb.com/docs/atlas/reference/google-gcp/#std-label-google-gcp",children:"Atlas cloud provider regions"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Google Cloud Region Selection"}),": ",(0,s.jsx)(n.a,{href:"https://cloud.google.com/about/locations",children:"GCP supported regions"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Confluent Flink Regions & Deployment"}),": ",(0,s.jsx)(n.a,{href:"https://docs.confluent.io/cloud/current/flink/reference/cloud-regions.html#flink-cloud-regions",children:"Confluent Flink docs"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"1-bring-up-the-infrastructure",children:"1. Bring up the infrastructure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"# Follow the prompts to enter your API keys\n./deploy.sh\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-have-a-conversation",children:"2. Have a conversation"}),"\n",(0,s.jsx)(n.p,{children:"Once the infrastructure is up and running, you can interact with the chatbot by opening the cloudfront url generated by\nterraform."}),"\n",(0,s.jsx)(n.p,{children:"For example, if the terraform output is:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'...\nfrontend_url = "https://quickstart-gcp-mongo-xkwzufwj-664304379300.us-central1.run.app"\n...\n'})}),"\n",(0,s.jsx)(n.p,{children:"You may have the following conversation"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Chatbot Conversation",src:t(9330).A+"",width:"1080",height:"1080"})}),"\n",(0,s.jsxs)(n.p,{children:["For the purposes of this quickstart, any username and password will be accepted, and you'll need to open the chat bubble\non the bottom right (after you log in) to have a conversation. Consider questions like; ",(0,s.jsx)(n.code,{children:"I have a headache, whats the best medicine?"})]}),"\n",(0,s.jsx)(n.h3,{id:"3-bring-down-the-infrastructure",children:"3. Bring down the infrastructure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"./destroy.sh\n"})}),"\n",(0,s.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,s.jsxs)(n.h3,{id:"when-i-run-destroysh-i-encounter-gcp-reauth-needed-error-how-can-i-solve-this-problem",children:["When I run destroy.sh I encounter ",(0,s.jsx)(n.strong,{children:"gcp reauth needed"})," error. How can I solve this problem?"]}),"\n",(0,s.jsxs)(n.p,{children:["The credentials associated with the session have expired due to a timeout.\nReauthentication is not enabled while you have an existing ",(0,s.jsx)(n.strong,{children:".config"})," file.\nTry deleting both ",(0,s.jsx)(n.strong,{children:".config"})," files under ",(0,s.jsx)(n.code,{children:"root"})," and ",(0,s.jsx)(n.code,{children:"/services"})," directory."]}),"\n",(0,s.jsx)(n.h3,{id:"which-deploysh-and-destroysh-should-i-run",children:"Which deploy.sh and destroy.sh should I run?"}),"\n",(0,s.jsx)(n.p,{children:"When deploying and destroying the project please run the root directory script files."}),"\n",(0,s.jsx)(n.h3,{id:"is-there-a-shortcut-to-pass-environment-variables-once-instead-providing-them-every-time-i-deploy",children:"Is there a shortcut to pass environment variables once instead providing them every time I deploy?"}),"\n",(0,s.jsx)(n.p,{children:"Yes, after your first deploy you can find all of them under your .env file. Be sure to export these variables before your next deploy."}),"\n",(0,s.jsx)(n.h3,{id:"i-am-hitting-error-error-reading-kafka-topic-401-api-key-based-authentication-failed-api-key-based-authentication-failed-error-while-rotating-my-keys-how-can-i-fix-this",children:'I am hitting "Error: error reading Kafka Topic: 401 API-key based authentication failed.: API-key based authentication failed." error while rotating my keys. How can I fix this?'}),"\n",(0,s.jsxs)(n.p,{children:["Kindly check if this is a key propagation issue and if the enough time has passed after creation. Check if all permissions, ACLs, etc are correctly set.\nIf everything looks in place then most probably the revoked API values were cached in the credentials section of the terraform resource confluent_kafka_topic.\nA ",(0,s.jsx)(n.code,{children:"terraform apply -refresh=false"})," under ",(0,s.jsx)(n.code,{children:"/infrastructure"})," directory should correct the issue."]}),"\n",(0,s.jsx)(n.h3,{id:"do-i-need-to-provide-credit-card-information-when-i-create-an-account-at-google-cloud-platform-and-confluent-cloud",children:"Do I need to provide credit card information when I create an account at Google Cloud Platform and Confluent Cloud?"}),"\n",(0,s.jsx)(n.p,{children:"Yes, please provide your credit card information if you do not already have an account at GCP or Confluent Cloud and need to create one for this quickstart."}),"\n",(0,s.jsx)(n.h2,{id:"next-steps---improving-the-results",children:"Next Steps - Improving the Results"}),"\n",(0,s.jsx)(n.p,{children:"There are several ways to enhance the chatbot's accuracy and relevance in retrieving medical information:"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Expand the Medical Knowledge Database"}),": The current demo operates on a limited set of sample prescription drugs data.\nYou can increase the dataset size by incorporating more drug references, side effect reports, and clinical guidelines.\nThe dataset can be updated in ",(0,s.jsx)(n.code,{children:"infrastructure/modules/data/medication.avro"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Refine AI Prompts for Medical Queries"}),": The chatbot\u2019s responses are influenced by the prompts used for query processing.\nYou can fine-tune these prompts in:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"infrastructure/statements/insert/chat-input-query.sql"}),"\n",(0,s.jsx)(n.li,{children:"infrastructure/statements/insert/populate-chat-output.sql"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Adjusting these prompts can improve the specificity and accuracy of AI-generated medical insights."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Optimise Vectorisation and Search in MongoDB Atlas"}),": Since the chatbot relies on MongoDB Atlas' vector search for\nretrieving relevant medical documents, you can enhance search efficiency by adjusting indexing strategies.\nThe configuration can be updated in ",(0,s.jsx)(n.code,{children:"infrastructure/main.tf"}),', under resource "mongodbatlas_search_index" "search-vector"\nFor further optimisations, refer to:\n',(0,s.jsx)(n.a,{href:"https://www.mongodb.com/docs/atlas/atlas-vector-search/vector-search-type/#atlas-vector-search-index-fields",children:"Atlas Vector Search Index Fields"}),"\n",(0,s.jsx)(n.a,{href:"https://www.mongodb.com/docs/atlas/atlas-vector-search/vector-search-stage/",children:"Vector Search Queries"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Fine-Tune Google Gemini for Better Summarisation and Responses"}),": Google Gemini is responsible for both summarising medical data and generating conversational responses.\nYou can tweak the temperature parameter in infrastructure/statements/create-models/gcp-vertexai-embed.sql to control response variability\u2014lower values lead to more deterministic, fact-based answers, while higher values encourage creative phrasing.\nRefer to the Google Gemini documentation for detailed tuning options."]}),"\n",(0,s.jsx)(n.p,{children:"By iterating on these improvements, you can enhance the chatbot\u2019s reliability, making it a more powerful tool for medical professionals seeking accurate, real-time medication insights."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},2521:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/gemini-key-ae8752a48bca1b806caf3f1bdeb07c4b.png"},4938:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/mongo_quickstart-8edf7397c33fd80ffc8bd81b8a850d62.png"},5501:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/cc-api-keys-cb0176a0ff7f9a698f2b7166862cfabd.gif"},6622:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/cc-api-keys-996ef5151ec6f5b3bb5a199954bd0106.png"},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},9330:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/example-convo-health-2c4bd724beccc946fc1ff0ab82a99265.gif"},9396:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/atlas-org-id-ec782d16954b5485ed7dd536ac4d38eb.png"},9407:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/mongodb-create-api-key-81942ab08a05ddf3083304121ca123dd.gif"}}]);