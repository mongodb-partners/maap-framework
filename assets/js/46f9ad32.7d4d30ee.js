"use strict";(self.webpackChunkmaap_docs=self.webpackChunkmaap_docs||[]).push([[3314],{8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}},9002:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"framework/agentic/demo/demo","title":"\ud83e\uddea Dr. Reddy\'s Pharma Product QnA Assistant","description":"Build an AI-powered assistant for pharmaceutical representatives to answer product questions and check inventory","source":"@site/docs/framework/agentic/demo/demo.md","sourceDirName":"framework/agentic/demo","slug":"/framework/agentic/demo/","permalink":"/maap-framework/docs/framework/agentic/demo/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Demos","permalink":"/maap-framework/docs/category/demos"},"next":{"title":"Framework Overview","permalink":"/maap-framework/docs/framework/rag/intro"}}');var r=t(4848),s=t(8453);const o={},a="\ud83e\uddea Dr. Reddy's Pharma Product QnA Assistant",d={},l=[{value:"\ud83d\udccb Overview",id:"-overview",level:2},{value:"\u2705 Key Capabilities",id:"-key-capabilities",level:3},{value:"\ud83c\udfd7\ufe0f Solution Architecture",id:"\ufe0f-solution-architecture",level:2},{value:"\ud83d\udd04 Implementation Process",id:"-implementation-process",level:2},{value:"\ud83d\udcca Phase 1: Data Pipeline",id:"-phase-1-data-pipeline",level:3},{value:"\ud83e\udd16 Phase 2: Agent Creation",id:"-phase-2-agent-creation",level:3},{value:"\ud83e\uddea Phase 3: Validation",id:"-phase-3-validation",level:3},{value:"\u2699\ufe0f Prerequisites",id:"\ufe0f-prerequisites",level:2},{value:"\ud83d\udee0\ufe0f Setup Process",id:"\ufe0f-setup-process",level:2},{value:"Step 1: Environment Configuration",id:"step-1-environment-configuration",level:3},{value:"Step 2: Configuration File Setup",id:"step-2-configuration-file-setup",level:3},{value:"Step 3: Document Collection",id:"step-3-document-collection",level:3},{value:"3.1 Download Product Documentation",id:"31-download-product-documentation",level:4},{value:"3.2 Document Content Overview",id:"32-document-content-overview",level:4},{value:"\ud83d\udd04 Data Processing Workflow",id:"-data-processing-workflow",level:2},{value:"Step 4: Document Processing",id:"step-4-document-processing",level:3},{value:"4.1 Start the Data Processing Service",id:"41-start-the-data-processing-service",level:4},{value:"4.2 Verify Service Health",id:"42-verify-service-health",level:4},{value:"4.3 Process Individual Documents",id:"43-process-individual-documents",level:4},{value:"4.4 Batch Process All Documents",id:"44-batch-process-all-documents",level:4},{value:"4.5 Expected Processing Results",id:"45-expected-processing-results",level:4},{value:"\ud83d\udd0d Verification Process",id:"-verification-process",level:2},{value:"Step 5: Data Validation",id:"step-5-data-validation",level:3},{value:"5.1 MongoDB Atlas Web Interface",id:"51-mongodb-atlas-web-interface",level:4},{value:"5.2 MongoDB Compass (Desktop Client)",id:"52-mongodb-compass-desktop-client",level:4},{value:"\ud83d\uddc3\ufe0f MongoDB Inventory Integration",id:"\ufe0f-mongodb-inventory-integration",level:2},{value:"Step 1: Prepare Structured Data Schema",id:"step-1-prepare-structured-data-schema",level:3},{value:"Step 2: Run Data Ingestion Script",id:"step-2-run-data-ingestion-script",level:3},{value:"Step 3: Script Functionality",id:"step-3-script-functionality",level:3},{value:"Step 4: Data Model Overview",id:"step-4-data-model-overview",level:3},{value:"Step 5: Verify Data Ingestion",id:"step-5-verify-data-ingestion",level:3},{value:"\ud83d\udd04 Dual-Data Advantage",id:"-dual-data-advantage",level:2},{value:"\ud83d\udd27 Installing MAAP Agent Builder",id:"-installing-maap-agent-builder",level:2},{value:"Required Dependencies",id:"required-dependencies",level:3},{value:"\ud83d\udee0\ufe0f Agent Configuration",id:"\ufe0f-agent-configuration",level:2},{value:"Step 1: YAML Configuration",id:"step-1-yaml-configuration",level:3},{value:"Step 2: Agent Deployment",id:"step-2-agent-deployment",level:3},{value:"Step 3: Create System Prompt",id:"step-3-create-system-prompt",level:3},{value:"Step 4: Agent Validation",id:"step-4-agent-validation",level:3},{value:"\ud83d\udcdd Example Prompts for Testing",id:"-example-prompts-for-testing",level:2},{value:"\ud83d\udee0\ufe0f Memory MCP Setup",id:"\ufe0f-memory-mcp-setup",level:2},{value:"Step 1: Clone the Memory MCP Repository",id:"step-1-clone-the-memory-mcp-repository",level:3},{value:"Step 2: Configure Environment Variables",id:"step-2-configure-environment-variables",level:3},{value:"Step 3: Deploy Using Docker Compose",id:"step-3-deploy-using-docker-compose",level:3},{value:"\ud83d\udca1 Integrating Memory MCP with Agent Builder",id:"-integrating-memory-mcp-with-agent-builder",level:2},{value:"Step 1: Update Agent Configuration",id:"step-1-update-agent-configuration",level:3},{value:"Step 2: Understanding Memory MCP Tools",id:"step-2-understanding-memory-mcp-tools",level:3},{value:"Step 3: Testing Memory-Enhanced Agent",id:"step-3-testing-memory-enhanced-agent",level:3},{value:"\ud83e\uddea Agent Testing Strategy",id:"-agent-testing-strategy",level:2},{value:"Step 1: Knowledge Testing",id:"step-1-knowledge-testing",level:3},{value:"Step 2: Inventory Intelligence",id:"step-2-inventory-intelligence",level:3},{value:"\ud83d\udd04 Continuous Improvement",id:"-continuous-improvement",level:2},{value:"Enhancement Roadmap",id:"enhancement-roadmap",level:3},{value:"Deployment Options",id:"deployment-options",level:3},{value:"\ud83d\udd0d Troubleshooting Guide",id:"-troubleshooting-guide",level:2},{value:"MongoDB Connection Issues",id:"mongodb-connection-issues",level:3},{value:"Embedding Model Errors",id:"embedding-model-errors",level:3},{value:"MCP Server Connection Problems",id:"mcp-server-connection-problems",level:3},{value:"Agent Execution Errors",id:"agent-execution-errors",level:3}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"-dr-reddys-pharma-product-qna-assistant",children:"\ud83e\uddea Dr. Reddy's Pharma Product QnA Assistant"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Build an AI-powered assistant for pharmaceutical representatives to answer product questions and check inventory"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-overview",children:"\ud83d\udccb Overview"}),"\n",(0,r.jsx)(n.p,{children:"This demonstration showcases a complete solution for pharmaceutical representatives who need instant access to accurate product information and real-time inventory data while in the field meeting with healthcare providers."}),"\n",(0,r.jsx)(n.h3,{id:"-key-capabilities",children:"\u2705 Key Capabilities"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Capability"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Product Knowledge"})}),(0,r.jsx)(n.td,{children:"Answer detailed questions about medication indications, contraindications, dosages, and side ef# \ud83e\udde0 PHASE 2B: MCP SERVER INTEGRATIONects"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Inventory Management"})}),(0,r.jsx)(n.td,{children:"Check real-time stock levels across multiple distribution centers# \ud83d\ude80 PHASE 3: VALIDATION & EXPANSION"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Memory"})}),(0,r.jsx)(n.td,{children:"Maintain conversation context and recall previous interactions"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Compliance"})}),(0,r.jsx)(n.td,{children:"Generate accurate responses based only on approved documentation"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-solution-architecture",children:"\ud83c\udfd7\ufe0f Solution Architecture"}),"\n",(0,r.jsx)(n.mermaid,{value:'graph TB\n    %% Data Sources\n    subgraph "Data Sources"\n        PDF[Dr. Reddy\'s Product PDFs<br/>\ud83d\udcc4 Package Inserts<br/>\ud83d\udcc4 Technical Documentation]\n        JSON[Structured Product Data<br/>\ud83d\udcca dr_reddys_products.json]\n    end\n\n    %% Phase 1: Data Pipeline\n    subgraph "Phase 1: Data Pipeline"\n        subgraph "MAAP Data Loader"\n            DL[Document Downloader<br/>\ud83d\udd04 Python Scripts]\n            PROC[PDF Processor<br/>\u2699\ufe0f Text Extraction<br/>\u2699\ufe0f Embedding Generation]\n        end\n        \n        subgraph "Data Processing"\n            EMB[Embedding Models<br/>\ud83e\udde0 VoyageAI<br/>\ud83e\udde0 AWS Bedrock Titan]\n            STRUCT[Structured Data Ingester<br/>\ud83d\udcdd Products & Inventory]\n        end\n    end\n\n    %% MongoDB Atlas\n    subgraph "MongoDB Atlas"\n        subgraph "Unstructured Data"\n            PROD_DOCS[(product_documents<br/>\ud83d\udcda Vector embeddings<br/>\ud83d\udcda PDF content)]\n        end\n        \n        subgraph "Structured Data"\n            PRODUCTS[(products<br/>\ud83d\udc8a Brand names<br/>\ud83d\udc8a Molecules)]\n            INVENTORY[(inventory<br/>\ud83d\udce6 Stock levels<br/>\ud83d\udce6 Distribution centers)]\n            CENTERS[(distribution_centers<br/>\ud83c\udfe2 Locations<br/>\ud83c\udfe2 Contact info)]\n        end\n        \n        subgraph "Agent State"\n            CHECKPOINTS[(checkpoints<br/>\ud83d\udcbe Conversation state)]\n        end\n    end\n\n    %% Phase 2: Agent Creation\n    subgraph "Phase 2: Agent Builder"\n        subgraph "MAAP Agent Builder"\n            CONFIG[Agent Configuration<br/>\u2699\ufe0f agents.yaml<br/>\u2699\ufe0f System prompts]\n            TOOLS[Agent Tools<br/>\ud83d\udd0d Vector Search<br/>\ud83d\udd0d Full-text Search<br/>\ud83e\udde0 AI Memory]\n        end\n        \n        subgraph "Language Models"\n            LLM[Claude 3.5 Sonnet<br/>\ud83e\udd16 AWS Bedrock]\n        end\n    end\n\n    %% Phase 2B: MCP Integration\n    subgraph "Phase 2B: Memory MCP Server"\n        subgraph "MCP Services"\n            MCP_MAIN[Memory MCP Main<br/>\ud83d\udd04 HTTP Server]\n            AI_MEM[AI Memory Service<br/>\ud83e\udde0 Conversation Memory]\n            SEM_CACHE[Semantic Cache<br/>\u26a1 Response Caching]\n            LOGGER[Event Logger<br/>\ud83d\udcdd Activity Logging]\n        end\n        \n        subgraph "Memory Database"\n            MEM_DB[(memory_mcp<br/>\ud83d\udcad Conversation history<br/>\ud83d\udcad Semantic cache)]\n        end\n    end\n\n    %% Phase 3: Application Layer\n    subgraph "Phase 3: Pharmaceutical Assistant"\n        subgraph "API Layer"\n            API[REST API<br/>\ud83c\udf10 /chat endpoint<br/>\ud83c\udf10 HTTP interface]\n            WEB[Web Interface<br/>\ud83d\udcbb Browser UI]\n        end\n        \n        subgraph "Agent Core"\n            AGENT[Pharma Sales Rep Agent<br/>\ud83e\udd16 React Agent<br/>\ud83e\udd16 Tool Integration]\n        end\n    end\n\n    %% End Users\n    subgraph "End Users"\n        SALES_REP[Pharmaceutical Sales Representatives<br/>\ud83d\udc68\u200d\ud83d\udcbc Field interactions<br/>\ud83d\udc68\u200d\ud83d\udcbc Customer meetings]\n        HCP[Healthcare Providers<br/>\ud83d\udc69\u200d\u2695\ufe0f Doctors<br/>\ud83d\udc69\u200d\u2695\ufe0f Pharmacists]\n    end\n\n    %% Data Flow Connections\n    PDF --\x3e DL\n    JSON --\x3e STRUCT\n    DL --\x3e PROC\n    PROC --\x3e EMB\n    EMB --\x3e PROD_DOCS\n    STRUCT --\x3e PRODUCTS\n    STRUCT --\x3e INVENTORY\n    STRUCT --\x3e CENTERS\n\n    %% Agent Builder Connections\n    CONFIG --\x3e TOOLS\n    TOOLS --\x3e AGENT\n    LLM --\x3e AGENT\n    PROD_DOCS --\x3e TOOLS\n    PRODUCTS --\x3e TOOLS\n    INVENTORY --\x3e TOOLS\n    CENTERS --\x3e TOOLS\n    CHECKPOINTS --\x3e AGENT\n\n    %% MCP Connections\n    MCP_MAIN --\x3e AI_MEM\n    MCP_MAIN --\x3e SEM_CACHE\n    MCP_MAIN --\x3e LOGGER\n    AI_MEM --\x3e MEM_DB\n    SEM_CACHE --\x3e MEM_DB\n    TOOLS --\x3e MCP_MAIN\n\n    %% Application Connections\n    AGENT --\x3e API\n    API --\x3e WEB\n    API --\x3e SALES_REP\n    SALES_REP --\x3e HCP\n\n    %% Styling\n    classDef dataSource fill:#e1f5fe\n    classDef processing fill:#f3e5f5\n    classDef database fill:#e8f5e8\n    classDef agent fill:#fff3e0\n    classDef mcp fill:#fce4ec\n    classDef api fill:#f1f8e9\n    classDef user fill:#e3f2fd\n\n    class PDF,JSON dataSource\n    class DL,PROC,EMB,STRUCT processing\n    class PROD_DOCS,PRODUCTS,INVENTORY,CENTERS,CHECKPOINTS,MEM_DB database\n    class CONFIG,TOOLS,LLM,AGENT agent\n    class MCP_MAIN,AI_MEM,SEM_CACHE,LOGGER mcp\n    class API,WEB api\n    class SALES_REP,HCP user'}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Component"}),(0,r.jsx)(n.th,{children:"Purpose"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"MAAP Data Loader"})}),(0,r.jsx)(n.td,{children:"Ingest and process pharmaceutical documentation (PDFs, package inserts, technical data)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"MAAP Agent Builder"})}),(0,r.jsx)(n.td,{children:"Create a conversational AI interface with specialized tool-calling capabilities"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"MongoDB Atlas"})}),(0,r.jsx)(n.td,{children:"Store and query both unstructured product knowledge and structured inventory data"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Memory MCP Server"})}),(0,r.jsx)(n.td,{children:"Store and manage conversational memory for contextual responses"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"-implementation-process",children:"\ud83d\udd04 Implementation Process"}),"\n",(0,r.jsx)(n.p,{children:"This implementation guide is organized into three sequential phases:"}),"\n",(0,r.jsx)(n.h3,{id:"-phase-1-data-pipeline",children:"\ud83d\udcca Phase 1: Data Pipeline"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Download pharmaceutical product PDFs from Dr. Reddy's"}),"\n",(0,r.jsx)(n.li,{children:"Process documents using MAAP Data Loader"}),"\n",(0,r.jsx)(n.li,{children:"Extract and index meaningful content"}),"\n",(0,r.jsx)(n.li,{children:"Import structured inventory and product data"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-phase-2-agent-creation",children:"\ud83e\udd16 Phase 2: Agent Creation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Configure the pharmaceutical representative agent"}),"\n",(0,r.jsx)(n.li,{children:"Set up vector search for product knowledge"}),"\n",(0,r.jsx)(n.li,{children:"Integrate MongoDB tools for inventory queries"}),"\n",(0,r.jsx)(n.li,{children:"Define agent behavior parameters"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-phase-3-validation",children:"\ud83e\uddea Phase 3: Validation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test with representative medical field queries"}),"\n",(0,r.jsx)(n.li,{children:"Verify accuracy against official documentation"}),"\n",(0,r.jsx)(n.li,{children:"Confirm inventory checking capabilities"}),"\n",(0,r.jsx)(n.li,{children:"Evaluate response quality and compliance"}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"-phase-1-data-pipeline-1",children:"\ud83d\udcda PHASE 1: DATA PIPELINE"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Ingest and process Dr. Reddy's pharmaceutical documentation"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This phase walks through setting up the data pipeline that will power your pharmaceutical assistant. We'll process product documentation and create searchable collections in MongoDB Atlas."}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-prerequisites",children:"\u2699\ufe0f Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"Before starting, verify you have the following components ready:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Requirement"}),(0,r.jsx)(n.th,{children:"Details"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"MongoDB Atlas"})}),(0,r.jsx)(n.td,{children:"Active cluster with connection string"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"MAAP Data Loader"})}),(0,r.jsx)(n.td,{children:"Installed and configured"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Python Environment"})}),(0,r.jsx)(n.td,{children:"Python 3.8+ with required libraries"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Source Data"})}),(0,r.jsx)(n.td,{children:"Access to Dr. Reddy's product documentation URLs"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"AWS Account"})}),(0,r.jsx)(n.td,{children:"Optional: For AWS Bedrock embedding generation"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-setup-process",children:"\ud83d\udee0\ufe0f Setup Process"}),"\n",(0,r.jsx)(n.h3,{id:"step-1-environment-configuration",children:"Step 1: Environment Configuration"}),"\n",(0,r.jsx)(n.p,{children:"First, set up your development environment:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clone the repository\ngit clone https://github.com/mongodb-partners/maap-data-loader.git\ncd maap-data-loader\n\n# Create and activate virtual environment\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install dependencies\npip install -r requirements.txt\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-2-configuration-file-setup",children:"Step 2: Configuration File Setup"}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:".env"})," file in the project root directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:"#===================================\n# MongoDB Configuration\n#===================================\nMONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net\nMONGODB_DATABASE=dr_reddys_demo\nMONGODB_COLLECTION=product_documents\n\n#===================================\n# AWS Configuration\n#===================================\nAWS_ACCESS_KEY_ID=your_aws_access_key\nAWS_SECRET_ACCESS_KEY=your_aws_secret_key\nAWS_REGION=us-east-1\n\n#===================================\n# Application Settings\n#===================================\nLOCAL_FILE_OUTPUT_DIR=./processed_files\nRUN_ENV=local\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-3-document-collection",children:"Step 3: Document Collection"}),"\n",(0,r.jsx)(n.h4,{id:"31-download-product-documentation",children:"3.1 Download Product Documentation"}),"\n",(0,r.jsx)(n.p,{children:"Gather Dr. Reddy's pharmaceutical product documentation using the provided scripts:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Python Script (Advanced)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Navigate to the data directory\ncd data\n\n# Install required dependencies\npip install requests pdfkit selenium webdriver-manager\n\n# Execute the Python downloader with options\npython download_urls.py --output-dir ./pdf_downloads --concurrent 3\n\n# Return to project root\ncd ..\n"})}),"\n",(0,r.jsx)(n.h4,{id:"32-document-content-overview",children:"3.2 Document Content Overview"}),"\n",(0,r.jsx)(n.p,{children:"The downloaded PDFs contain comprehensive pharmaceutical information:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Content Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Active Ingredients"}),(0,r.jsx)(n.td,{children:"Chemical compounds and their concentrations"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Indications"}),(0,r.jsx)(n.td,{children:"Approved medical uses and conditions"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Contraindications"}),(0,r.jsx)(n.td,{children:"Situations when medication should not be used"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Dosage Information"}),(0,r.jsx)(n.td,{children:"Recommended dosages by age, weight, condition"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Side Effects"}),(0,r.jsx)(n.td,{children:"Common and rare adverse reactions"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Storage Instructions"}),(0,r.jsx)(n.td,{children:"Temperature, humidity and handling requirements"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Regulatory Information"}),(0,r.jsx)(n.td,{children:"Approval details and compliance data"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"-data-processing-workflow",children:"\ud83d\udd04 Data Processing Workflow"}),"\n",(0,r.jsx)(n.h3,{id:"step-4-document-processing",children:"Step 4: Document Processing"}),"\n",(0,r.jsx)(n.h4,{id:"41-start-the-data-processing-service",children:"4.1 Start the Data Processing Service"}),"\n",(0,r.jsx)(n.p,{children:"Launch the MAAP Data Loader service:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Start the processing server\npython app.py\n"})}),"\n",(0,r.jsx)(n.h4,{id:"42-verify-service-health",children:"4.2 Verify Service Health"}),"\n",(0,r.jsx)(n.p,{children:"Confirm the service is running correctly:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl -X GET http://localhost:8000/health\n"})}),"\n",(0,r.jsx)(n.p,{children:"Expected response:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{"status": "healthy"}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"43-process-individual-documents",children:"4.3 Process Individual Documents"}),"\n",(0,r.jsx)(n.p,{children:"Process a single document to test the pipeline:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Process a single PDF file\ncurl -X POST http://localhost:8000/local/upload \\\n  -H "Content-Type: multipart/form-data" \\\n  -F "files=@./data/pdf_downloads/all5-17.07.2024.pdf" \\\n  -F \'json_input_params={\n    "user_id": "dr_reddys_demo",\n    "mongodb_config": {\n      "uri": "mongodb+srv://username:password@cluster.mongodb.net",\n      "database": "dr_reddys_demo",\n      "collection": "product_documents",\n      "index_name": "vector_index",\n      "text_field": "text",\n      "embedding_field": "embedding"\n    }\n  }\'\n'})}),"\n",(0,r.jsx)(n.h4,{id:"44-batch-process-all-documents",children:"4.4 Batch Process All Documents"}),"\n",(0,r.jsx)(n.p,{children:"Create and execute a batch processing script for all documents:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Create batch processing script\ncat > process_all_pdfs.sh << \'EOF\'\n#!/bin/bash\n\nPDF_DIR="./data/pdf_downloads"\nPROCESSED=0\nTOTAL=$(find "$PDF_DIR" -name "*.pdf" | wc -l)\n\necho "\ud83d\udd04 Starting batch processing of $TOTAL PDF files"\n\nfor pdf_file in "$PDF_DIR"/*.pdf; do\n  if [ -f "$pdf_file" ]; then\n    PROCESSED=$((PROCESSED+1))\n    FILENAME=$(basename "$pdf_file")\n    \n    echo "\ud83d\udcc4 [$PROCESSED/$TOTAL] Processing: $FILENAME"\n    \n    curl -s -X POST http://localhost:8000/local/upload \\\n      -H "Content-Type: multipart/form-data" \\\n      -F "files=@$pdf_file" \\\n      -F \'json_input_params={\n        "user_id": "dr_reddys_demo",\n        "mongodb_config": {\n          "uri": "mongodb+srv://username:password@cluster.mongodb.net",\n          "database": "dr_reddys_demo",\n          "collection": "product_documents",\n          "index_name": "vector_index",\n          "text_field": "text",\n          "embedding_field": "embedding"\n        }\n      }\'\n      \n    echo -e "\\n\u23f1\ufe0f Waiting 2 seconds before next file..."\n    sleep 2\n  fi\ndone\n\necho "\u2705 Completed processing $PROCESSED files"\nEOF\n\n# Make the script executable\nchmod +x process_all_pdfs.sh\n\n# Run the batch processing script\n./process_all_pdfs.sh\n'})}),"\n",(0,r.jsx)(n.h4,{id:"45-expected-processing-results",children:"4.5 Expected Processing Results"}),"\n",(0,r.jsx)(n.p,{children:"Each successfully processed document will return:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "Upload processed successfully",\n  "details": {\n    "files_processed": 1,\n    "urls_processed": 0,\n    "documents_stored": 1,\n    "file_list": ["all5-17.07.2024.pdf"],\n    "url_list": []\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-verification-process",children:"\ud83d\udd0d Verification Process"}),"\n",(0,r.jsx)(n.h3,{id:"step-5-data-validation",children:"Step 5: Data Validation"}),"\n",(0,r.jsx)(n.h4,{id:"51-mongodb-atlas-web-interface",children:"5.1 MongoDB Atlas Web Interface"}),"\n",(0,r.jsx)(n.p,{children:"Verify proper document ingestion using the MongoDB Atlas web interface:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Log in to your ",(0,r.jsx)(n.a,{href:"https://cloud.mongodb.com",children:"MongoDB Atlas account"})]}),"\n",(0,r.jsx)(n.li,{children:"Navigate to your project > Database > Browse Collections"}),"\n",(0,r.jsxs)(n.li,{children:["Select the ",(0,r.jsx)(n.code,{children:"dr_reddys_demo"})," database"]}),"\n",(0,r.jsxs)(n.li,{children:["Examine the ",(0,r.jsx)(n.code,{children:"product_info"})," collection"]}),"\n",(0,r.jsx)(n.li,{children:"Confirm documents contain the following structure:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "_id": ObjectId("..."),\n  "text": "ALLERWAY 5: COMPOSITION: Each film-coated tablet contains levocetirizine dihydrochloride 5 mg...",\n  "embedding": [0.023, -0.128, 0.332, ...],\n  "user_id": "dr_reddys_demo",\n  "metadata": {\n    "filename": "all5-17.07.2024.pdf",\n    "processed_at": "2025-08-08T10:23:45Z",\n    "pages": 4,\n    "file_type": "application/pdf"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"52-mongodb-compass-desktop-client",children:"5.2 MongoDB Compass (Desktop Client)"}),"\n",(0,r.jsx)(n.p,{children:"For more advanced validation using the MongoDB Compass desktop client:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Download and install ",(0,r.jsx)(n.a,{href:"https://www.mongodb.com/products/compass",children:"MongoDB Compass"})]}),"\n",(0,r.jsx)(n.li,{children:"Connect using your MongoDB Atlas connection string"}),"\n",(0,r.jsxs)(n.li,{children:["Navigate to the ",(0,r.jsx)(n.code,{children:"dr_reddys_demo.product_info"})," collection"]}),"\n",(0,r.jsx)(n.li,{children:"Run sample validation queries:"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Sample Query 1: Find documents by product name"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{text: {$regex: "Cifloc", $options: "i"}}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Sample Query 2: Find documents with dosage information"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{text: {$regex: "recommended dose|dosage|administered", $options: "i"}}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Sample Query 3: Find documents with side effects"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{text: {$regex: "adverse|side effects|warnings", $options: "i"}}\n'})}),"\n",(0,r.jsx)(n.h1,{id:"-phase-1b-structured-data-integration",children:"\ud83d\udcca PHASE 1B: STRUCTURED DATA INTEGRATION"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Enhance your agent with real-time inventory and product data"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"While PDF content provides valuable pharmaceutical information, structured data gives your agent access to precise, queryable business data like inventory levels and product specifications."}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-mongodb-inventory-integration",children:"\ud83d\uddc3\ufe0f MongoDB Inventory Integration"}),"\n",(0,r.jsx)(n.h3,{id:"step-1-prepare-structured-data-schema",children:"Step 1: Prepare Structured Data Schema"}),"\n",(0,r.jsx)(n.p,{children:"Our inventory system will track products across multiple distribution centers with the following information:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Product ID and name"}),"\n",(0,r.jsx)(n.li,{children:"Batch numbers and expiration dates"}),"\n",(0,r.jsx)(n.li,{children:"Quantity available"}),"\n",(0,r.jsx)(n.li,{children:"Distribution center location"}),"\n",(0,r.jsx)(n.li,{children:"Pricing information"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"step-2-run-data-ingestion-script",children:"Step 2: Run Data Ingestion Script"}),"\n",(0,r.jsx)(n.p,{children:"Execute our structured data ingestion script:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Navigate to the demo directory\ncd dr_reddy_pharma_sales_rep_demo\n\n# Execute the import script\npython ingest_structured_data.py \\\n  --mongodb-uri "mongodb+srv://username:password@cluster.mongodb.net" \\\n  --database "dr_reddys_demo" \\\n  --products-collection "products" \\\n  --inventory-collection "inventory" \\\n  --centers-collection "distribution_centers"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"step-3-script-functionality",children:"Step 3: Script Functionality"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"ingest_structured_data.py"})," script performs these key operations:"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Operation"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Data Loading"})}),(0,r.jsxs)(n.td,{children:["Imports structured product data from ",(0,r.jsx)(n.code,{children:"data/dr_reddys_products.json"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Collection Creation"})}),(0,r.jsx)(n.td,{children:"Creates and populates three interrelated collections"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Relationship Building"})}),(0,r.jsx)(n.td,{children:"Establishes connections between products, documents, and inventory"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Data Enrichment"})}),(0,r.jsx)(n.td,{children:"Adds computed fields and search optimizations"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"step-4-data-model-overview",children:"Step 4: Data Model Overview"}),"\n",(0,r.jsx)(n.p,{children:"The script creates a comprehensive data model with these collections:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Collection: ",(0,r.jsx)(n.code,{children:"products"})]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\n  "_id": ObjectId("..."),\n  "brand_name": "Allerway 5",\n  "molecule": "Levocetirizine Dihydrochloride",\n  "therapy": "Antihistaminics",\n  "dosage_form": "Tabs",\n  "package_insert_url": "https://www.drreddys.co.za/sites/.../all5-17.07.2024.pdf",\n  "document_id": ObjectId("..."),  // Link to unstructured PDF data\n  "search_text": "Allerway 5 Levocetirizine Dihydrochloride"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Collection: ",(0,r.jsx)(n.code,{children:"inventory"})]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\n  "_id": ObjectId("..."),\n  "product_id": ObjectId("..."),\n  "distribution_center_id": ObjectId("..."),\n  "quantity": 315,\n  "last_updated": ISODate("2025-08-08T12:34:56Z"),\n  "reorder_level": 50,\n  "available": true\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Collection: ",(0,r.jsx)(n.code,{children:"distribution_centers"})]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\n  "_id": ObjectId("..."),\n  "name": "Mumbai Central",\n  "location": {\n    "city": "Mumbai",\n    "state": "Maharashtra",\n    "country": "India"\n  },\n  "address": "123 Main Street, Mumbai",\n  "contact": "+91-9876543210"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"step-5-verify-data-ingestion",children:"Step 5: Verify Data Ingestion"}),"\n",(0,r.jsx)(n.p,{children:"A successful import will show this output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\ud83d\udd04 Loading data from ./data/dr_reddys_products.json\n\u2705 Successfully connected to MongoDB Atlas\n\ud83d\udcca Created products collection with 38 products\n\ud83d\udce6 Created inventory collection with 152 inventory records\n\ud83c\udfe2 Created distribution centers collection with 12 centers\n\ud83d\udd17 Successfully linked PDF documents with product data\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-dual-data-advantage",children:"\ud83d\udd04 Dual-Data Advantage"}),"\n",(0,r.jsx)(n.p,{children:"With both unstructured and structured data sources integrated, your agent can now:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Access Deep Knowledge"}),": Retrieve detailed pharmaceutical information from product documentation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Provide Business Context"}),": Offer real-time inventory levels, pricing, and availability information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Answer Complex Queries"}),": Respond to questions that require both knowledge types:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'"What is the recommended dosage for Allerway 5 and is it available in the Boston distribution center?"'}),"\n",(0,r.jsx)(n.li,{children:'"Tell me about the side effects of Reegen-D 15000 and check if it\'s available for expedited shipping from our New York warehouse."'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"-phase-2-agent-creation-1",children:"\ud83e\udd16 PHASE 2: AGENT CREATION"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Build an intelligent pharmaceutical assistant with MAAP Agent Builder"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Now that our data pipeline is complete with both unstructured (PDFs) and structured (products/inventory) data in MongoDB Atlas, we'll install, configure, and deploy a specialized agent for pharmaceutical representatives."}),"\n",(0,r.jsx)(n.h2,{id:"-installing-maap-agent-builder",children:"\ud83d\udd27 Installing MAAP Agent Builder"}),"\n",(0,r.jsx)(n.p,{children:"Before configuring your agent, you need to set up the MAAP Agent Builder framework:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clone the repository\ngit clone https://github.com/mongodb-partners/maap-agent-builder.git\ncd maap-agent-builder\n\n# Set up a virtual environment\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install the package\npip install -e .\n\n# Create necessary directories\nmkdir -p config logs prompts\n"})}),"\n",(0,r.jsx)(n.h3,{id:"required-dependencies",children:"Required Dependencies"}),"\n",(0,r.jsx)(n.p,{children:"The agent builder requires several key dependencies:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install core dependencies for MongoDB integration\npip install pymongo langchain-mongodb\n\n# Install embedding providers\npip install voyageai boto3 langchain-aws\n\n# Install MCP dependencies for memory capabilities\npip install langchain-mcp-adapters fastmcp\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-agent-configuration",children:"\ud83d\udee0\ufe0f Agent Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"step-1-yaml-configuration",children:"Step 1: YAML Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["Create or update your ",(0,r.jsx)(n.code,{children:"config/agents.yaml"})," file with the following configuration:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'#===================================\n# Dr. Reddy\'s Pharma Sales Rep Agent - Configuration\n#===================================\n\n# Configure the embedding models\nembeddings:\n  - name: voyage_embeddings\n    provider: voyageai\n    model_name: voyage-3.5-lite\n    additional_kwargs:\n      output_dimension: 512\n  - name: bedrock-titan\n    provider: bedrock\n    model_name: amazon.titan-embed-text-v1\n\n# Configure the language model\nllms:\n  - name: claude-3.5\n    provider: bedrock\n    model_name: anthropic.claude-3-5-sonnet-20240620-v1:0\n    temperature: 0.7\n    max_tokens: 4096\n\n# Configure agent tools\ntools:\n  # Product Availability Tool (Full-text search)\n  - name: product_availability\n    tool_type: full_text_search\n    description: Checks product availability of the product in the MongoDB database\n    connection_str: ${MONGODB_URI:-mongodb://localhost:27017}\n    namespace: dr_reddys.product_inventory\n    additional_kwargs:\n      index_name: full_text_search_index\n      text_field: search_text\n      top_k: 5\n      \n  # Product Information Tool (Vector search)\n  - name: product_information\n    tool_type: vector_search\n    description: Searches for relevant documents in the vector store to help with FAQ on dr reddys product information\n    connection_str: ${MONGODB_URI:-mongodb://localhost:27017}\n    namespace: dr_reddys.product_info\n    embedding_model: voyage_embeddings  # Reference to the embedding model defined above\n    additional_kwargs:\n      index_name: vector_index\n      top_k: 3\n      min_score: 0.7\n      \n  # AI Memory Tool (MCP server integration)\n  - name: ai-memory\n    tool_type: mcp\n    description: MongoDB MCP Toolkit for advanced data operations\n    servers_config:\n      "ai-memory":\n        url: "http://localhost:8080/mcp"\n        transport: "streamable_http"\n        filter:\n          - store_memory\n          - retrieve_memory\n          - semantic_cache_response\n\n# Configure checkpointing\ncheckpointer:\n  connection_str: ${MONGODB_URI:-mongodb://localhost:27017}\n  db_name: dr_reddy_agent_state\n  collection_name: checkpoints\n  name: rag_agent_checkpointer\n\n# Configure the agent\nagent:\n  name: rag_react_agent\n  agent_type: react\n  llm: claude-3.5  # Reference to the LLM defined above\n  tools:\n    - product_information  # References to the tools defined above\n    - product_availability\n    - ai-memory\n  system_prompt_path: ./prompts/rag_system_prompt.txt\n'})}),"\n",(0,r.jsx)(n.h3,{id:"step-2-agent-deployment",children:"Step 2: Agent Deployment"}),"\n",(0,r.jsx)(n.p,{children:"Launch the agent service with all required environment variables:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Set required environment variables\nexport MONGODB_URI="mongodb+srv://username:password@cluster.mongodb.net"\nexport AWS_ACCESS_KEY_ID="your_aws_access_key"\nexport AWS_SECRET_ACCESS_KEY="your_aws_secret_key"\nexport AWS_REGION="us-east-1"\nexport VOYAGE_API_KEY="your_voyage_api_key"  # Required for voyage embeddings\n\n# Start the agent service\npython -m agent_builder.cli serve \\\n  --config config/agents.yaml \\\n  --host 0.0.0.0 \\\n  --port 5000\n'})}),"\n",(0,r.jsx)(n.h3,{id:"step-3-create-system-prompt",children:"Step 3: Create System Prompt"}),"\n",(0,r.jsx)(n.p,{children:"Create a system prompt file that defines your agent's behavior and capabilities:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create the prompts directory if it doesn't exist\nmkdir -p prompts\n\n# Create the system prompt file\ncat > prompts/rag_system_prompt.txt << 'EOF'\n# Pharmaceutical Sales Representative Assistant\n\nYou are an AI assistant specialized in helping pharmaceutical sales representatives with detailed product information, inventory management, and clinical knowledge.\n\n## Your Capabilities\n\n- Access detailed pharmaceutical product information including indications, contraindications, dosages, side effects\n- Check real-time inventory levels across distribution centers\n- Maintain conversation memory to provide contextual assistance\n- Generate compliant, factual responses based only on approved documentation\n\n## Guidelines\n\n1. Always provide factually accurate information based on official Dr. Reddy's product documentation\n2. When discussing medications, include important safety information and contraindications\n3. For inventory queries, provide specific details on availability, location, and quantity\n4. Use professional, clear language appropriate for pharmaceutical professionals\n5. Maintain conversation context by referencing relevant details from previous exchanges\n6. If unsure about any information, clearly state the limitations of your knowledge\n7. Do not provide medical advice beyond what is contained in official product documentation\n\nRemember: Your responses will be used by pharmaceutical representatives when speaking with healthcare professionals, so accuracy and compliance are essential.\nEOF\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-4-agent-validation",children:"Step 4: Agent Validation"}),"\n",(0,r.jsx)(n.p,{children:"Test the agent through the API:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Example API request\ncurl -X POST http://localhost:5000/chat \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "messages": [\n      {"role": "user", "content": "What are the indications for Allerway 5?"}\n    ],\n    "config": {\n      "thread_id": "user-session-123",\n      "recursion_limit": 10,\n    }\n  }\'\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Or access the web interface by opening: ",(0,r.jsx)(n.a,{href:"http://localhost:5000",children:"http://localhost:5000"})]}),"\n",(0,r.jsx)(n.h2,{id:"-example-prompts-for-testing",children:"\ud83d\udcdd Example Prompts for Testing"}),"\n",(0,r.jsx)(n.p,{children:"Test your agent with these pharmaceutical representative scenarios:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Category"}),(0,r.jsx)(n.th,{children:"Example Prompt"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Product Information"})}),(0,r.jsx)(n.td,{children:'"What are the side effects of Cifloc and how do they compare to similar antibiotics?"'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Dosage Guidance"})}),(0,r.jsx)(n.td,{children:'"A doctor is considering prescribing Alnedra to an elderly patient with kidney issues. What\'s the recommended dosage adjustment?"'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Inventory Check"})}),(0,r.jsx)(n.td,{children:"\"I'm meeting with a hospital pharmacy manager tomorrow. What's our current inventory level of Drymed 500 in the Mumbai distribution center?\""})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Safety Information"})}),(0,r.jsx)(n.td,{children:'"A patient is pregnant in her second trimester. Are there any contraindications for using Cifloc in her case?"'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Storage Requirements"})}),(0,r.jsx)(n.td,{children:'"A clinic in a rural area without reliable refrigeration asks about Lenap 10mg. What are the storage requirements?"'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Combined Query"})}),(0,r.jsx)(n.td,{children:'"I need information about Reegen-D 15000 for a dermatology clinic. What are the key benefits and do we have enough stock to fulfill a large order?"'})]})]})]}),"\n",(0,r.jsx)(n.h1,{id:"-phase-2b-mcp-server-integration",children:"\ufffd PHASE 2B: MCP SERVER INTEGRATION"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Enhance your agent with MongoDB Memory MCP server integration"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"After configuring the basic agent, you can extend its capabilities by integrating with the MongoDB Memory MCP server, providing advanced memory management, semantic caching, and hybrid search functionality."}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-memory-mcp-setup",children:"\ud83d\udee0\ufe0f Memory MCP Setup"}),"\n",(0,r.jsx)(n.p,{children:"The MongoDB Memory MCP server provides powerful memory management for conversational agents, allowing them to store and retrieve information across sessions."}),"\n",(0,r.jsx)(n.h3,{id:"step-1-clone-the-memory-mcp-repository",children:"Step 1: Clone the Memory MCP Repository"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clone the MongoDB Memory MCP repository\ngit clone https://github.com/mongodb-partners/memory-mcp.git\ncd memory-mcp\n\n# Create necessary environment files from examples\ncp .env.example .env\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-2-configure-environment-variables",children:"Step 2: Configure Environment Variables"}),"\n",(0,r.jsxs)(n.p,{children:["Edit the ",(0,r.jsx)(n.code,{children:".env"})," file with your MongoDB and AWS credentials:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:"# Core Application Settings\nAPP_NAME=memory-mcp\nDEBUG=False\nPORT=8080\n\n# Service URLs (default Docker Compose settings)\nLOGGER_SERVICE_URL=http://event-logger:8181\nAI_MEMORY_SERVICE_URL=http://ai-memory:8182\nSEMANTIC_CACHE_SERVICE_URL=http://semantic-cache:8183\n\n# MongoDB Configuration\nMONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net\nDATABASE_NAME=memory_mcp\nCOLLECTION_NAME=memory\n\n# AWS Configuration\nAWS_ACCESS_KEY_ID=your_access_key\nAWS_SECRET_ACCESS_KEY=your_secret_key\nAWS_REGION=us-east-1\nEMBEDDING_MODEL_ID=amazon.titan-embed-text-v1\nLLM_MODEL_ID=us.anthropic.claude-3-sonnet-20240229-v1:0\nVECTOR_DIMENSION=1536\n\n# External APIs\nTAVILY_API_KEY=your_tavily_api_key\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-3-deploy-using-docker-compose",children:"Step 3: Deploy Using Docker Compose"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Build and start all services\ndocker-compose up -d\n\n# Verify deployment\ndocker-compose ps\ndocker-compose logs memory-mcp\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-integrating-memory-mcp-with-agent-builder",children:"\ud83d\udca1 Integrating Memory MCP with Agent Builder"}),"\n",(0,r.jsx)(n.h3,{id:"step-1-update-agent-configuration",children:"Step 1: Update Agent Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["Your ",(0,r.jsx)(n.code,{children:"config/agents.yaml"})," file already includes the Memory MCP integration with the ",(0,r.jsx)(n.code,{children:"ai-memory"})," tool. Here's the relevant section highlighting the MCP configuration:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# AI Memory Tool Configuration\ntools:\n  # Other tools configuration...\n  \n  # Memory MCP Integration\n  - name: ai-memory\n    tool_type: mcp\n    description: MongoDB MCP Toolkit for advanced data operations\n    servers_config:\n      "ai-memory":\n        url: "http://localhost:8080/mcp"\n        transport: "streamable_http"\n        filter:\n          - store_memory\n          - retrieve_memory\n          - semantic_cache_response\n\n# Agent configuration using the Memory MCP tool\nagent:\n  name: rag_react_agent\n  agent_type: react\n  llm: claude-3.5\n  tools:\n    - product_information\n    - product_availability\n    - ai-memory  # AI Memory tool is included in the agent\'s toolset\n  system_prompt_path: ./prompts/rag_system_prompt.txt\n'})}),"\n",(0,r.jsx)(n.h3,{id:"step-2-understanding-memory-mcp-tools",children:"Step 2: Understanding Memory MCP Tools"}),"\n",(0,r.jsx)(n.p,{children:"The Memory MCP server provides several powerful tools that enhance your pharmaceutical sales rep agent:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Tool"}),(0,r.jsx)(n.th,{children:"Purpose"}),(0,r.jsx)(n.th,{children:"Benefits"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"store_memory"})}),(0,r.jsx)(n.td,{children:"Save conversation messages for future context"}),(0,r.jsx)(n.td,{children:"Maintains conversation history across sessions"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"retrieve_memory"})}),(0,r.jsx)(n.td,{children:"Get relevant context from past conversations"}),(0,r.jsx)(n.td,{children:"Provides continuity for pharmaceutical discussions"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"semantic_cache_response"})}),(0,r.jsx)(n.td,{children:"Cache responses for similar queries"}),(0,r.jsx)(n.td,{children:"Reduces latency for common drug inquiries"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"check_semantic_cache"})}),(0,r.jsx)(n.td,{children:"Check for existing similar responses"}),(0,r.jsx)(n.td,{children:"Ensures consistency in medication information"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"hybrid_search"})}),(0,r.jsx)(n.td,{children:"Advanced document search combining vector and keyword matching"}),(0,r.jsx)(n.td,{children:"Improves accuracy of pharmaceutical documentation searches"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"step-3-testing-memory-enhanced-agent",children:"Step 3: Testing Memory-Enhanced Agent"}),"\n",(0,r.jsx)(n.p,{children:"Start your agent with the updated configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Start the agent builder service with MCP integration\npython -m agent_builder.cli serve \\\n  --config config/agents.yaml \\\n  --host 0.0.0.0 \\\n  --port 5000\n"})}),"\n",(0,r.jsx)(n.p,{children:"Test the memory capabilities with sequential queries:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"First query establishes context:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'"Tell me about the side effects of Allerway 5"\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Follow-up query references previous context:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'"Given those side effects, what precautions should be taken?"\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"The agent should respond using memory from the previous interaction, demonstrating continuity of conversation."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"-phase-3-validation--expansion",children:"\ufffd\ud83d\ude80 PHASE 3: VALIDATION & EXPANSION"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Test, validate and expand your pharmaceutical assistant"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"After completing the configuration and deployment of your pharmaceutical sales representative agent, it's essential to thoroughly test its capabilities and plan for future enhancements."}),"\n",(0,r.jsx)(n.h2,{id:"-agent-testing-strategy",children:"\ud83e\uddea Agent Testing Strategy"}),"\n",(0,r.jsx)(n.h3,{id:"step-1-knowledge-testing",children:"Step 1: Knowledge Testing"}),"\n",(0,r.jsx)(n.p,{children:"Verify the agent can accurately retrieve information from pharmaceutical documentation:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Factual Queries"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'"What is the active ingredient in Allerway 5?"'}),"\n",(0,r.jsx)(n.li,{children:'"What are the contraindications for Cifloc?"'}),"\n",(0,r.jsx)(n.li,{children:'"What is the recommended pediatric dosage for Lenap 10mg?"'}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Contextual Understanding"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'"Compare the side effects of Drymed 500 and Cifloc"'}),"\n",(0,r.jsx)(n.li,{children:'"Explain when Alnedra should be taken with food versus without"'}),"\n",(0,r.jsx)(n.li,{children:'"What safety precautions should be taken with Reegen-D 15000?"'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"step-2-inventory-intelligence",children:"Step 2: Inventory Intelligence"}),"\n",(0,r.jsx)(n.p,{children:"Test the agent's ability to access structured inventory data:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Basic Inventory Queries"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'"How many units of Allerway 5 are available across all distribution centers?"'}),"\n",(0,r.jsx)(n.li,{children:'"Is Cifloc currently in stock at the Mumbai distribution center?"'}),"\n",(0,r.jsx)(n.li,{children:'"What\'s our current inventory level for Drymed 500?"'}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Complex Business Logic"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'"Which distribution center has the highest stock of Lenap 10mg?"'}),"\n",(0,r.jsx)(n.li,{children:'"Are we below the reorder threshold for Alnedra in any location?"'}),"\n",(0,r.jsx)(n.li,{children:'"What\'s the total inventory value of antihistamine products?"'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-continuous-improvement",children:"\ud83d\udd04 Continuous Improvement"}),"\n",(0,r.jsx)(n.h3,{id:"enhancement-roadmap",children:"Enhancement Roadmap"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Enhancement"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Priority"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Image Recognition"})}),(0,r.jsx)(n.td,{children:"Allow scanning of product packaging"}),(0,r.jsx)(n.td,{children:"Medium"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Prescription Analysis"})}),(0,r.jsx)(n.td,{children:"Extract information from prescription images"}),(0,r.jsx)(n.td,{children:"High"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Mobile Integration"})}),(0,r.jsx)(n.td,{children:"Native mobile app for field representatives"}),(0,r.jsx)(n.td,{children:"High"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Offline Mode"})}),(0,r.jsx)(n.td,{children:"Limited functionality without internet connection"}),(0,r.jsx)(n.td,{children:"Medium"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Competitor Analysis"})}),(0,r.jsx)(n.td,{children:"Add comparative product information"}),(0,r.jsx)(n.td,{children:"Low"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"deployment-options",children:"Deployment Options"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Cloud Deployment"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Deploy to MongoDB Atlas App Services"}),"\n",(0,r.jsx)(n.li,{children:"Configure with AWS/Azure/GCP serverless functions"}),"\n",(0,r.jsx)(n.li,{children:"Set up CI/CD pipeline for automated updates"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"On-Premises Solutions"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Kubernetes deployment within corporate infrastructure"}),"\n",(0,r.jsx)(n.li,{children:"Integration with existing enterprise systems"}),"\n",(0,r.jsx)(n.li,{children:"Compliance with internal security policies"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Hybrid Approaches"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep sensitive data on-premises"}),"\n",(0,r.jsx)(n.li,{children:"Use cloud resources for model serving"}),"\n",(0,r.jsx)(n.li,{children:"Implement proper data encryption and access controls"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-troubleshooting-guide",children:"\ud83d\udd0d Troubleshooting Guide"}),"\n",(0,r.jsx)(n.p,{children:"If you encounter issues during setup or operation, here are some common problems and solutions:"}),"\n",(0,r.jsx)(n.h3,{id:"mongodb-connection-issues",children:"MongoDB Connection Issues"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Error: MongoDB connection failed\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Verify your MongoDB Atlas connection string"}),"\n",(0,r.jsx)(n.li,{children:"Check if your IP address is whitelisted in MongoDB Atlas"}),"\n",(0,r.jsx)(n.li,{children:"Ensure your cluster is running and accessible"}),"\n",(0,r.jsx)(n.li,{children:"Test connection with MongoDB Compass"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"embedding-model-errors",children:"Embedding Model Errors"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Error: Failed to generate embeddings\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Verify your API keys for VoyageAI or AWS are correct and active"}),"\n",(0,r.jsx)(n.li,{children:"Check that the embedding model specified exists"}),"\n",(0,r.jsx)(n.li,{children:"Ensure your network can reach the embedding service"}),"\n",(0,r.jsx)(n.li,{children:"Try reducing embedding dimensions if you encounter memory issues"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"mcp-server-connection-problems",children:"MCP Server Connection Problems"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Error: Failed to connect to MCP server\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Verify the MCP server is running with ",(0,r.jsx)(n.code,{children:"docker-compose ps"})]}),"\n",(0,r.jsx)(n.li,{children:"Check if the port is correctly exposed and accessible"}),"\n",(0,r.jsxs)(n.li,{children:["Review the MCP server logs with ",(0,r.jsx)(n.code,{children:"docker-compose logs memory-mcp"})]}),"\n",(0,r.jsx)(n.li,{children:"Ensure your MongoDB configuration for the MCP server is correct"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"agent-execution-errors",children:"Agent Execution Errors"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Error: Tool execution failed\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Check if all required environment variables are set"}),"\n",(0,r.jsx)(n.li,{children:"Verify namespace values match your MongoDB collections"}),"\n",(0,r.jsx)(n.li,{children:"Review tool permissions and settings"}),"\n",(0,r.jsx)(n.li,{children:"Test each tool individually to isolate the problem"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);